#!/usr/bin/python
import sys
import time
# FIXME: this shall be removed in the final version
sys.path = ["/home/jkt/work/fzu/deska/src/deska/python", "/home/jkt/work/fzu/deska/_build"] + sys.path
import deska

deska.init()

t1 = time.time()
all_services = deska.service._all()
t2 = time.time()

# File containing the group definitions for cfengine
f_cf_groups = file("cfengine-groups.cf", "wb")


for service in all_services.keys():
    hosts_farm = deska.host[deska.host.service.contains("in_nagios") &
                            deska.host.service.contains(service) &
                            ((deska.interface.network == "Golias-25") |
                             (deska.interface.network == "Golias-NAT"))]
    hosts_fzu  = deska.host[deska.host.service.contains("in_nagios") &
                            deska.host.service.contains(service) &
                            (deska.interface.network == "FZU")]

    hostnames_all = sorted(hosts_farm.keys() + hosts_fzu.keys())
    fqdn_hostnames = sorted(["%s.fzu.cz" % h for h in hosts_fzu] +
                            ["%s.farm.particle.cz" % h for h in hosts_farm])

    # The required format for cfengine is pretty simple, just a list of host
    # names in parenthesis
    f_cf_groups.write("%s = (%s)\n" % (service, " ".join(hostnames_all)))

    if len(hostnames_all):
        f_nagios_hostgroups = file("nagios-hostgroups-%s.cfg" % service, "wb")
        f_nagios_hostgroups.write("define hostgroup {\n  hostgroup_name %(service)s\n  members %(hostnames)s\n}\n"
                                  % {"service": service, "hostnames": ",".join(fqdn_hostnames)})
        f_nagios_hostgroups.close()

    if service == "in_nagios":
        # a special service which holds all servers that are supposed to be
        # monitored by Nagios
        pass



f_cf_groups.close()


t3 = time.time()

file("__timing-stats", "ab").write(
    "services: total %s, main query %s, loop %s\n" % (t3 - t1, t2 - t1, t3 - t2))
